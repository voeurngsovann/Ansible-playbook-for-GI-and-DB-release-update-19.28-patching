- name: Deinstall Oracle Grid Infrastructure
  hosts: dbservers
  remote_user: root
  vars:
    removed_value: 'REMOVED="T"'
    old_grid_home: /u01/app/19.27/grid
    patch_dir: /home/grid/soft
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Create response file for silent deinstallation
      ansible.builtin.shell:
        cmd: "{{ old_grid_home }}/deinstall/deinstall -checkonly"
      become: yes
      become_user: grid
      become_method: su
      throttle: 1

    - name: Register old grid_home response file for deinstallation
      ansible.builtin.shell:
        cmd: "ls -lsrt /tmp/deinstall*/response/*.rsp | tail -1 | awk '{print $NF}'"
      register: oldgridresponse

    - name: Unlock old grid_home for deinstallation
      ansible.builtin.shell:
        cmd: "{{ old_grid_home }}/crs/install/rootcrs.sh -unlock -crshome {{ old_grid_home }} -paramfile {{ oldgridresponse.stdout }}"

    - name: Recursively change ownership of old_grid_home directory
      ansible.builtin.file:
        path: "{{ old_grid_home | dirname }}"
        state: directory
        recurse: yes
        owner: grid
        group: oinstall

    - name: Deinstall old grid_home
      ansible.builtin.expect:
        command: "/bin/bash -c '{{ old_grid_home }}/deinstall/deinstall'"
        responses:
          'Do you want to continue': 'y'
        echo: yes
        timeout: 600
      become: yes
      become_user: grid
      run_once: true
      register: deinstall_result

    - name: Check inventory whether old_grid_home is tagged with removed flag
      ansible.builtin.shell:
        cmd: "grep '{{ old_grid_home }}' /u01/app/oraInventory/ContentsXML/inventory.xml | awk '{ print $NF }'"
      register: removedflag

    - name: Remove old grid_home directory
      ansible.builtin.file:
        path: "{{ old_grid_home | dirname }}"
        state: absent
      when: deinstall_result.rc == 0 or removedflag.stdout == removed_value
